delta ClosestSelectEnemy {

	modifies jab.module.SelectEnemy {

		adds import robocode.ScannedRobotEvent;
		adds import robocode.Event;
		adds import jab.module.Module;
		adds import java.util.Iterator;
		adds import jab.module.BotInfo;

		adds private double closestDistance;
		adds private String closestEnemy;
		adds private String target;

		adds public void setTarget(String target) {
			this.target = target;
		}

		adds public String getTarget() {
			return target;
		}

		modifies constructor(Module bot) {
			this.bot = bot;
			closestDistance = Double.MAX_VALUE;
			closestEnemy = null;
			target = null;
		}

		adds public void listen(Event e) {
			if (e instanceof ScannedRobotEvent) {
				ScannedRobotEvent scannedEvent = (ScannedRobotEvent) e;
				double distance = scannedEvent.getDistance();
				if (distance < closestDistance) {
					closestDistance = distance;
					closestEnemy = scannedEvent.getName();
				}
			}
		}

		modifies select() {
			Iterator<BotInfo> iterator = bot.botsInfo.values().iterator();
			double minDistance = Double.MAX_VALUE;
			BotInfo selected = null;
			while (iterator.hasNext()) {
				BotInfo botInfo = iterator.next();
				if ((!botInfo.teammate) && minDistance > botInfo.distance) {
					selected = botInfo;
					minDistance = botInfo.distance;
				}
			}
			bot.enemy = selected;
		}
	}
}